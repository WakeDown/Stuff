@using Stuff.Helpers
@using Stuff.Models
@using Stuff.Objects
@model Stuff.Models.RecruitVacancy

@{
    ViewBag.Title = "Новая вакансия";
    Layout = "~/Views/Shared/_Editor.cshtml";
    //var empList =Employee.GetEmployeeListSid();
}

@section PanelHead
{
    Новая вакансия
}

@section PanelBody
{
    @using (Html.BeginForm("VacancyNew", "Recruit", FormMethod.Post, new { @id = "posForm", @class = "form-horizontal", role = "form" }))
    {
        <div class="form-group">
            <label class="col-lg-2 control-label" for="vacancyType">Тип заявки</label>
            <div class="col-lg-5">
                <div class="form-control required-mark">
                    @foreach (RecruitVacancyType type in RecruitVacancyType.GetList())
                    {
                        @Html.RadioButtonFor(m => m.TypeId, type.Id, new { required = "required" })
                        @:&nbsp;@type.Name
                    }
                </div>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="cause">Причина возникновения</label>
            <div class="col-lg-5">
                <div class="form-control required-mark">
                    @foreach (RecruitVacancyCause cause in RecruitVacancyCause.GetList())
                    {
                        @Html.RadioButtonFor(m => m.IdCause, cause.Id, new { required = "required" })
                        @:&nbsp;@cause.Name
                }
                </div>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="author">Автор заявки</label>
            <div class="col-lg-5">
                @*@Html.DropDownListFor(m => m.AuthorSid, empList, "--выберите--", new {@class = "form-control required-mark", @id = "author", required = "required", data_error = "Заполните поле Автор"})*@
                <select id="author" required="required" data_error="Заполните поле Автор" class="form-control required-mark" name="AuthorSid"></select>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="city">Филиал</label>
            <div class="col-lg-5">
                @Html.DropDownListFor(m => m.IdBranchOffice, BranchOffice.GetSelectionList(), "--выберите--", new { @class = "form-control required-mark", @id = "city", required = "required", data_error = "Заполните поле Филиал" })
                <span class="help-block with-errors"></span>
            </div>
        </div>
        @*<div class="form-group">
            <label class="col-lg-2 control-label" for="city">Город</label>
            <div class="col-lg-5">
                @Html.DropDownListFor(m => m.IdCity, City.GetSelectionList(), "--выберите--", new { @class = "form-control required-mark", @id = "city", required = "required", data_error = "Заполните поле Город" })
                <span class="help-block with-errors"></span>
            </div>
        </div>*@
    <div class="form-group">
    <label class="col-lg-2 control-label" for="department">Подразделение</label>
    <div class="col-lg-5">
        @*@Html.DropDownListFor(m => m.IdDepartment, Department.GetSelectionList(), "--выберите--", new { @class = "form-control required-mark", @id = "department", required = "required", data_error = "Заполните поле Подразделение" })*@
        <select id="department" required="required" data_error="Заполните поле Подразделение" class="form-control required-mark" name="IdDepartment"></select>
        <span class="help-block with-errors"></span>
    </div>
</div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="position">Должность</label>
            <div class="col-lg-5">
                @*@Html.DropDownListFor(m => m.IdPosition, Position.GetSelectionList(), "--выберите--", new { @class = "form-control required-mark", @id = "position", required = "required", data_error = "Заполните поле Должность" })*@
                <select id="position" required="required" data_error="Заполните поле Должность" class="form-control required-mark" name="IdPosition"></select>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="chief">Руководитель</label>
            <div class="col-lg-5">
                @*@Html.DropDownListFor(m => m.ChiefSid, empList, "--выберите--", new {@class = "form-control required-mark", @id = "chief", required = "required", data_error = "Заполните поле Руководитель" })*@
                <select id="chief" required="required" data_error="Заполните поле Подразделение" class="form-control required-mark" name="ChiefSid"></select>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="matcher">Руководитель принимающий решение</label>
            <div class="col-lg-5">
                @*@Html.DropDownListFor(m => m.MatcherSid, empList, "--выберите--", new {@class = "form-control required-mark", @id = "matcher", required = "required", data_error = "Заполните поле Руководитель принимающий решение"})*@
                <select id="matcher" required="required" data_error="Заполните поле Руководитель принимающий решение" class="form-control required-mark" name="MatcherSid"></select>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="personalManager">Менеджер по персоналу</label>
            <div class="col-lg-5">
                @*@Html.DropDownListFor(m => m.PersonalManagerSid, new SelectList(AdHelper.GetUserListByAdGroup(AdGroup.PersonalManager), "Key", "Value"), "--выберите--", new {@class = "form-control required-mark", @id = "personalManager", required = "required", data_error = "Заполните поле Менеджер по персоналу"})*@
                <select id="personalManager" required="required" data_error="Заполните поле Менеджер по персоналу" class="form-control required-mark" name="PersonalManagerSid"></select>
                <span class="help-block with-errors"></span>
            </div>
        </div>
        @*<div class="form-group">
            <label class="col-lg-2 control-label" for="deadlineDate">Дата окончания План</label>
            <div class="col-lg-2">
                @Html.TextBoxFor(m => m.DeadlineDate, new {@class = "form-control text-right required-mark", @id = "deadlineDate", required="required", data_mask = "00.00.0000"})
                <span class="help-block with-errors"></span>
            </div>
        </div>*@
        <div class="form-group">
            <label class="col-lg-2 control-label" for="orderEndDate">Дата окончания Регламент</label>
            <div class="col-lg-2">
                @Html.TextBoxFor(m => m.OrderEndDate, new {@class = "form-control text-right required-mark", @id = "orderEndDate", required = "required", data_mask = "00.00.0000"})
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="claimEndDate">Дата окончания Заявка</label>
            <div class="col-lg-2">
                @Html.TextBoxFor(m => m.ClaimEndDate, new {@class = "form-control text-right required-mark", @id = "claimEndDate", required = "required", data_mask = "00.00.0000"})
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="col-lg-2 control-label" for="comment">Комментарий</label>
            <div class="col-lg-5">
                @Html.TextAreaFor(m => m.Comment, new { @class = "form-control", rows="3" })
                <span class="help-block with-errors"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-push-2 col-lg-5">
                <button type="submit" class="btn btn-success"><i class="fa fa-save"></i>&nbsp;сохранить</button>
                <a href="@Url.Action("Index")" class="btn btn-default"><i class="fa fa-mail-reply"></i> назад</a>
            </div>
        </div>
        <div class="form-group">
            <div class="col-lg-push-2 col-lg-push-2 col-lg-6">
                <span class="text-danger">@TempData["error"]</span>
            </div>
        </div>
    }
}

@section scripts
{
    <script type="text/javascript">
        $(function() {
            $("#deadlineDate").datepicker({
                format: "dd.mm.yyyy",
                autoclose: true,
                todayBtn: "linked",
                language: "ru"
            });

            $("#orderEndDate").datepicker({
                format: "dd.mm.yyyy",
                autoclose: true,
                todayBtn: "linked",
                language: "ru"
            });

            $("#claimEndDate").datepicker({
                format: "dd.mm.yyyy",
                autoclose: true,
                todayBtn: "linked",
                language: "ru"
            });

            fillLists();
        });

        function fillLists() {
            var $selectAuthor = $('#author');
            var $selectChief = $('#chief');
            var $selectMatcher = $('#matcher');
            showSpinner($selectAuthor, true);
            showSpinner($selectChief, true);
            showSpinner($selectMatcher, true);
            $.ajax({
                url: '@Url.Action("GetEmployeeListSid")',
                method: 'POST',
                success: function(data) {
                    if (data.length > 0) {
                        var nullOpt = '<option value="">--выберите--</option>';
                        $selectAuthor.append(nullOpt);
                        $selectChief.append(nullOpt);
                        $selectMatcher.append(nullOpt);
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            if (item.AdSid != null && item.AdSid != '') {
                                var opt = '<option value="' + item.AdSid + '">' + item.DisplayName + '</option>';
                                $selectAuthor.append(opt);
                                $selectChief.append(opt);
                                $selectMatcher.append(opt);
                            }
                        }
                    }
                    hideSpinner($selectAuthor);
                    hideSpinner($selectChief);
                    hideSpinner($selectMatcher);
                },
                error: function() {
                    hideSpinner($selectAuthor);
                    hideSpinner($selectChief);
                    hideSpinner($selectMatcher);
                }
            });
            var $selectPersonalManager = $('#personalManager');
            showSpinner($selectPersonalManager, true);
            $.ajax({
                url: '@Url.Action("GetPersonalManagerListSid")',
                method: 'POST',
                success: function(data) {
                    if (data.length > 0) {
                        var nullOpt = '<option value="">--выберите--</option>';
                        $selectPersonalManager.append(nullOpt);
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                                var opt = '<option value="' + item.Key + '">' + item.Value + '</option>';
                                $selectPersonalManager.append(opt);
                        }
                        var curPersonalManagerSid = '@ViewBag.CurUser.Sid';
                        $selectPersonalManager.val(curPersonalManagerSid);
                    }
                    hideSpinner($selectPersonalManager);
                },
                error: function() {
                    hideSpinner($selectPersonalManager);
                }
            });
            var $position = $('#position');
            showSpinner($position, true);
            $.ajax({
                url: '@Url.Action("GetPositionList")',
                method: 'POST',
                success: function(data) {
                    if (data.length > 0) {
                        var nullOpt = '<option value="">--выберите--</option>';
                        $position.append(nullOpt);
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            var opt = '<option value="' + item.Id + '">' + item.Name + '</option>';
                            $position.append(opt);
                        }
                    }
                    hideSpinner($position);
                },
                error: function() {
                    hideSpinner($position);
                }
            });

            var $department = $('#department');
            showSpinner($department, true);
            $.ajax({
                url: '@Url.Action("GetDepartmentList")',
                method: 'POST',
                success: function(data) {
                    if (data.length > 0) {
                        var nullOpt = '<option value="">--выберите--</option>';
                        $department.append(nullOpt);
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            var opt = '<option value="' + item.Id + '">' + item.Name + '</option>';
                            $department.append(opt);
                        }
                    }
                    hideSpinner($department);
                },
                error: function() {
                    hideSpinner($department);
                }
            });
        }
    </script>
}